{"version":3,"sources":["components/ContactForm.js","components/Filter.js","components/ContactList.js","components/App.js","index.js"],"names":["ContactForm","props","onSubmit","handler","type","name","Filter","onChange","searchHandler","ContactList","deleteContact","contacts","map","contact","key","id","number","onClick","data-id","defaultProps","filter","Phonebook","state","submitFormHandler","event","preventDefault","el","target","elements","nameInput","value","numberInput","isNotUniqueName","alert","setState","uuidv4","searchInputHandler","onDeleteBtnHandler","contactId","dataset","prevState","this","some","toLowerCase","console","log","includes","readContactsFromLocalStorage","setContactsToLocalStorage","contactsString","localStorage","getItem","contactsObj","JSON","parse","setItem","stringify","findContact","length","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4dadc8b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ContactForm(props) {\r\n    return (\r\n        <form onSubmit={props.handler}>\r\n            <label>\r\n                Name <input type=\"text\" name=\"nameInput\" />\r\n            </label>\r\n            <label>\r\n                Number <input type=\"tel\" name=\"numberInput\" />\r\n            </label>\r\n            <button type=\"submit\">Add contact</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nContactForm.propTypes = {\r\n    handler: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter(props) {\r\n    return (\r\n        <label>\r\n            Find contacts by name\r\n            <input type=\"text\" name=\"search\" onChange={props.searchHandler} />\r\n        </label>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    searchHandler: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList(props) {\r\n    const { deleteContact, contacts } = props;\r\n    return (\r\n        <ul>\r\n            {contacts.map((contact) => (\r\n                <li key={contact.id}>\r\n                    <span>\r\n                        {contact.name}: {contact.number}\r\n                    </span>\r\n                    <button onClick={deleteContact} data-id={contact.id}>\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nContactList.defaultProps = {\r\n    filter: null,\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ContactForm from \"./ContactForm\";\r\nimport Filter from \"./Filter\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nexport default class Phonebook extends React.Component {\r\n    state = {\r\n        contacts: [\r\n            { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n            { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n            { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n            { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n        ],\r\n        filter: \"\",\r\n    };\r\n    isNotUniqueName(name) {\r\n        return this.state.contacts.some(\r\n            (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n        );\r\n    }\r\n    submitFormHandler = (event) => {\r\n        event.preventDefault();\r\n        const el = event.target.elements;\r\n        const nameInput = el.nameInput.value;\r\n        const numberInput = el.numberInput.value;\r\n        if (!this.isNotUniqueName(nameInput)) {\r\n            this.setState({\r\n                contacts: [\r\n                    ...this.state.contacts,\r\n                    { id: uuidv4(), name: nameInput, number: numberInput },\r\n                ],\r\n            });\r\n            el.nameInput.value = \"\";\r\n            el.numberInput.value = \"\";\r\n        } else {\r\n            alert(`${nameInput} is already in contact list`);\r\n        }\r\n    };\r\n    searchInputHandler = (event) => {\r\n        this.setState({ filter: event.target.value });\r\n    };\r\n    onDeleteBtnHandler = (event) => {\r\n        const contactId = event.target.dataset.id;\r\n        this.setState((prevState) => {\r\n            return {\r\n                contacts: prevState.contacts.filter(\r\n                    (contact) => contact.id !== contactId\r\n                ),\r\n            };\r\n        });\r\n    };\r\n    findContact() {\r\n        const { contacts, filter } = this.state;\r\n        console.log(\r\n            contacts.filter((contact) =>\r\n                contact.name.toLowerCase().includes(filter.toLowerCase())\r\n            )\r\n        );\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this.readContactsFromLocalStorage();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setContactsToLocalStorage();\r\n    }\r\n    readContactsFromLocalStorage() {\r\n        const contactsString = localStorage.getItem(\"contacts\");\r\n        const contactsObj = JSON.parse(contactsString);\r\n        this.setState({ contacts: contactsObj });\r\n    }\r\n    setContactsToLocalStorage() {\r\n        localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n    render() {\r\n        const { contacts, filter } = this.state;\r\n        return (\r\n            <section>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm handler={this.submitFormHandler} />\r\n                <h2>Contacts</h2>\r\n                <Filter searchHandler={this.searchInputHandler} />\r\n                <ContactList\r\n                    contacts={filter ? this.findContact() : contacts}\r\n                    deleteContact={this.onDeleteBtnHandler}\r\n                />\r\n                {filter && this.findContact().length === 0 && (\r\n                    <p>There's no such contact</p>\r\n                )}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Phonebook from \"./components/App\";\r\n\r\nReactDOM.render(<Phonebook />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}